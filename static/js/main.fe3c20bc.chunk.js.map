{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Toast/Toast.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/Toast/Toast.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","def","persistor","persistStore","Toast","message","createPortal","className","s","container","document","querySelector","ContactForm","haveError","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","find","item","showToast","onAddContact","prev","errorMessage","setTimeout","this","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","connect","dispatch","phone","onChangeFilter","length","contact","toLowerCase","includes","getVisibleContacts","onDeleteContact","TransitionGroup","component","list","map","appear","listItem","onClick","App","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.fe3c20bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1bH27\",\"listItem\":\"ContactList_listItem__1g2ys\",\"button\":\"ContactList_button__24ABz\",\"appear\":\"ContactList_appear__nVgGV\",\"appearActive\":\"ContactList_appearActive__FrkPr\",\"enter\":\"ContactList_enter__m7e7o\",\"enterActive\":\"ContactList_enterActive__3jRoO\",\"exit\":\"ContactList_exit__1wB6Z\",\"exitActive\":\"ContactList_exitActive__2MXZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__1H5ER\",\"message\":\"Toast_message___lFZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3eaOy\"};","// import { v4 as uuidv4 } from 'uuid';\n// import types from './phonebook-types';\n\n// export const addContact = (name, number) => ({\n//   type: types.ADD,\n//   payload: { id: uuidv4(), name, number },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: types.DELETE,\n//   payload: contactId,\n// });\n\n// export const changeFilter = filterValue => ({\n//   type: types.CHANGE_FILTER,\n//   payload: filterValue,\n// });\n\nimport { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const addContact = createAction('phonebook/add', (name, number) => ({\n  payload: { id: uuidv4(), name, number },\n}));\nexport const deleteContact = createAction('phonebook/delete');\nexport const changeFilter = createAction('phonebook/changeFilter');\n","// import { combineReducers } from 'redux';\n// import types from './phonebook-types';\n\n// const items = (state = [], { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [payload, ...state];\n\n//     case types.DELETE:\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.CHANGE_FILTER:\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './phonebook-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [payload, ...state],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { createStore, combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// const mainReducer = combineReducers({\n//   contacts: phonebookReducer,\n// });\n\n// const store = createStore(mainReducer, composeWithDevTools());\n\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst def = { store, persistor };\n\nexport default def;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Toast.module.css';\nimport { createPortal } from 'react-dom';\n\nfunction Toast({ message }) {\n  return createPortal(\n    <div className={s.container}>\n      <p className={s.message}>{message}</p>\n    </div>,\n    document.querySelector('#toast'),\n  );\n}\n\nToast.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Toast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\nimport Toast from '../Toast/Toast';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/phonebook/phonebook-actions';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    haveError: false,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    if (name === '' || name === '') {\n      this.showToast(\"Name or number can't be empty string\");\n\n      return;\n    }\n\n    if (this.props.contacts.find(item => item.name === name)) {\n      this.showToast(`${name} is already in contacts`);\n      this.setState({ name: '', number: '' });\n      return;\n    }\n\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  showToast = message => {\n    this.setState(prev => ({\n      haveError: !prev.haveError,\n      errorMessage: message,\n    }));\n    setTimeout(() => {\n      this.setState(prev => ({\n        haveError: !prev.haveError,\n      }));\n    }, 1500);\n  };\n\n  render() {\n    const { errorMessage, haveError } = this.state;\n\n    return (\n      <>\n        <CSSTransition\n          in={haveError}\n          timeout={250}\n          classNames=\"toast\"\n          unmountOnExit\n        >\n          <Toast message={errorMessage} />\n        </CSSTransition>\n\n        <form onSubmit={this.handleSubmit} className={s.form}>\n          <label className={s.label}>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddContact: (name, phone) => dispatch(addContact(name, phone)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\n\nfunction Filter({ value = '', onChangeFilter, items }) {\n  return (\n    <CSSTransition\n      in={items.length > 0}\n      timeout={500}\n      classNames=\"filter\"\n      unmountOnExit\n    >\n      <div>\n        <h3>Find contact by name</h3>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={value}\n          onChange={onChangeFilter}\n        />\n      </div>\n    </CSSTransition>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../redux/phonebook/phonebook-actions';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.length === 0 ? (\n        <CSSTransition\n          key={1}\n          timeout={700}\n          classNames=\"message-empty\"\n          unmountOnExit\n        >\n          <li>Contact list empty for now</li>\n        </CSSTransition>\n      ) : (\n        contacts.map(({ name, number, id }) => {\n          return (\n            <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\n              <li className={s.listItem}>\n                <span>\n                  {name}: {number}\n                </span>\n                <button\n                  type=\"button\"\n                  className={s.button}\n                  onClick={() => onDeleteContact(id)}\n                >\n                  Delete contact\n                </button>\n              </li>\n            </CSSTransition>\n          );\n        })\n      )}\n    </TransitionGroup>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n\n  const visibleContacts = getVisibleContacts(items, filter);\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import './App.css';\nimport React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport './App.css';\n\nexport default function App(props) {\n  return (\n    <div className=\"App\">\n      <div className=\"Container\">\n        <CSSTransition\n          in={true}\n          appear={true}\n          timeout={500}\n          classNames=\"title\"\n          unmountOnExit\n        >\n          <h1>Phonebook</h1>\n        </CSSTransition>\n\n        <ContactForm />\n\n        <h1>Contacts</h1>\n\n        <Filter />\n\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__26HYw\",\"label\":\"ContactForm_label__2iQKI\",\"input\":\"ContactForm_input__3e62X\",\"button\":\"ContactForm_button__15RBp\"};"],"sourceRoot":""}